#lightTPD Configuration file (CORE)
#
# Use it as a base for LightTPD 1.0.0 and above.
# This version is built by WLMP Project - http://en.wlmp.project.net/
#
# $Id: lighttpd.conf,v 1.8 2012/02/07 19:30:32 dtech Exp $

############ Options you really have to take care of ####################

## modules to load
# at least mod_access and mod_accesslog should be loaded
# all other module should only be loaded if really neccesary
# - saves some time
# - saves memory
server.modules              = (
                                "mod_access",
                                "mod_accesslog",
                                "mod_alias",
                                "mod_fastcgi",
                                "mod_rewrite",
                                "mod_ssi",
                                "mod_status",
                               )

server.document-root        = "/opt/lenovo/UnifiedService/webroot"
server.upload-dirs          = ( "tmp" )
server.errorlog             = "/var/log/lighttpd/error.log"
accesslog.filename          = "/var/log/lighttpd/access.log"
server.pid-file             = "/var/run/lighttpd.pid"
server.username             = "www-data"
server.groupname            = "www-data"

index-file.names            = ( "index.php", "index.pl", "index.cgi", "index.cml",
                                "index.html", "index.htm", "default.htm",
                                "index.lighttpd.html" )

url.access-deny             = ( "~", ".inc" )

## disable range request for PDF files
$HTTP["url"] =~ "\.pdf$" {
  server.range-requests = "disable"
}

## static-file module
# which extensions should not be handle via static-file transfer
#
# .php, .pl, .fcgi are most often handled by mod_fastcgi or mod_cgi
static-file.exclude-extensions = ( ".php", ".pyc", ".py", ".pl", ".cgi" )

######### Options that are good to be but not neccesary to be changed #######

#IPv6 config
## enable ipv6 usage
server.use-ipv6            = "disable"

#IPv4 config
## bind to port (default: 80)
server.port        =  9080
server.reject-expect-100-with-417	=	"disable"

#dir-listing.activate        = "enable"
dir-listing.encoding        = "utf-8"
server.dir-listing          = "enable"

## enable debugging
debug.log-request-header   = "enable"
debug.log-response-header  = "enable"
debug.log-request-handling = "enable"
debug.log-file-not-found   = "enable"

#### compress module
#compress.cache-dir         = temp_dir + "/cache/compress"
#compress.filetype          = ("text/plain", "text/html")

#### fastcgi module
## read fastcgi.txt for more info
## for PHP don't forget to set cgi.fix_pathinfo = 1 in the php.ini
## ... and PHP_FCGI_MAX_REQUESTS = 0 environment variable in system properties
fastcgi.server             = ( ".php" =>
                               ( "localhost" =>
                                 (
                                   "host" => "127.0.0.1",
                                   "port" => 9000
                                 )
                               ),
                               ".py" =>
                               (
                                  "localhost" =>
                                  (
                                    "host" => "127.0.0.1",
                                    "port" => 522, 
                                  )
                                ),
                               ".pyc" =>
                               (
                                  "localhost" =>
                                  (
                                    "host" => "127.0.0.1",
                                    "port" => 522, 
                                  )
                                )
                             )


#### SSL engine
ssl.engine                 = "disable"
ssl.pemfile                = "/opt/lenovo/UnifiedService/webroot/cert/server.pem"


#### status module
status.status-url           = "/server-status"
status.config-url           = "/server-config"
## fcgi statistics
#status.statistics-url      = "/server-counters"

#### auth module
## read authentication.txt for more info
#auth.backend               = "plain"
#auth.backend.plain.userfile = conf_dir + "/auth.user"
#auth.backend.plain.groupfile = conf_dir + "/auth.group"

#auth.backend.ldap.hostname = "localhost"
#auth.backend.ldap.base-dn  = "dc=my-domain,dc=com"
#auth.backend.ldap.filter   = "(uid=$)"

#auth.require               = ( "/server-status" =>
#                               (
#                                 "method"  => "digest",
#                                 "realm"   => "Server status",
#                                 "require" => "user=admin"
#                               ),
#                               "/server-config" =>
#                               (
#                                 "method"  => "digest",
#                                 "realm"   => "Server config",
#                                 "require" => "user=admin"
#                               )
#                             )

#### url handling modules (rewrite, redirect, access)
#url.rewrite                = ( "^/$"             => "/server-status" )
#url.redirect               = ( "^/wishlist/(.+)" => "http://www.123.org/$1" )
url.rewrite                =  ( "^/$" => "WebContent/index.html",
                                "/js/dojo/dojo/resources/blank.html" => "pages/blank.html",
                                "^/(.+\.js.*)$" => "WebContent/$1",
                                "^/(.+\.cer.*)$" => "WebContent/$1",
                                "^/(.+\.css.*)$" => "WebContent/$1",
                                "^/(.+\.png.*)$" => "WebContent/$1",
                                "^/(.+\.jpg.*)$" => "WebContent/$1",
                                "^/(.+\.jpeg.*)$" => "WebContent/$1",
                                "^/(.+\.gif.*)$" => "WebContent/$1",
                                
                                "^/(.+\.html.*)$" => "WebContent/$1",
                                "^/images/(.+)$" => "images/$1",
                                "^/config/(.+)$" => "bin/config/$1",
                                "^/dsalog/(.+)/(.+)" => "bin/data/dsa/$1/$2 ",
                                "^/cimlistener(.*)" => "bin/ServerStart.pyc/cimlistener",
                                "^/immcimlistener(.*)" => "bin/ServerStart.pyc/immcimlistener",
                                "^/(.+)/(.+)" => "bin/ServerStart.pyc/$1/$2")

include_shell "/usr/share/lighttpd/create-mime.assign.pl"
include_shell "/usr/share/lighttpd/include-conf-enabled.pl"
